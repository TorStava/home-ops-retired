---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
    ignore:
      - paths: [/spec/replicas]
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: *app
              - secretRef:
                  name: outline-initdb
        containers:
          app:
            image:
              repository: n8nio/n8n
              tag: 1.108.1@sha256:8509288ac9c0591ddb8a4e4a8e432e003f3cc91bf492cfed6e2c8125c3de3a94
            command:
              - /bin/sh
            args:
              - -c
              - sleep 5; exec n8n
            env: &env
              GENERIC_TIMEZONE: ${TIMEZONE}
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: true
              WEBHOOK_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}/
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_RUNNERS_ENABLED: true
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: n8n.${SECRET_DOMAIN}
              N8N_PROXY_HOPS: 1
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              DB_TYPE: postgresdb
              DB_POSTGRESDB_DATABASE: *app
              DB_POSTGRESDB_HOST: postgres-cluster-rw.database.svc.cluster.local
              DB_POSTGRESDB_PORT: 5432
              DB_POSTGRESDB_USER: *app
              EXECUTIONS_MODE: queue
              QUEUE_BULL_REDIS_HOST: dragonfly-cluster.database.svc.cluster.local
              QUEUE_BULL_REDIS_PORT: 6379
              QUEUE_HEALTH_CHECK_ACTIVE: true
            envFrom: &envFrom
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 500m
                memory: 256Mi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

      worker:
        replicas: 1
        containers:
          worker:
            image:
              repository: n8nio/n8n
              tag: 1.108.1@sha256:8509288ac9c0591ddb8a4e4a8e432e003f3cc91bf492cfed6e2c8125c3de3a94
            command:
              - /bin/sh
              - -c
              - sleep 5; exec n8n worker
            env: *env
            envFrom: *envFrom
            resources:
              requests:
                cpu: 500m
                memory: 256Mi

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Home
          gethomepage.dev/name: n8n
          gethomepage.dev/icon: n8n.png
          gethomepage.dev/app: *app

    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          *app :
            app:
              - path: /home/node/.n8n
