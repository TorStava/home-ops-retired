---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app "${APP}"
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
    ignore:
      - paths: [/spec/replicas]
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: *app
              - secretRef:
                  name: firefly-iii-initdb
        containers:
          app:
            image:
              repository: fireflyiii/core
              tag: version-6.3.2@sha256:e69c9558f910d7652ae98ad0f6583ed2470b56620c4241b05b6b5f63bfea8020
            env:
              # App Settings
              APP_ENV: local
              DEFAULT_LANGUAGE: en_US
              DEFAULT_LOCALE: en_US
              TZ: "${TIMEZONE}"
              MAP_DEFAULT_ZOOM: 6
              APP_URL: https://firefly.${SECRET_DOMAIN}
              TRUSTED_PROXIES: **
              # DB Settings
              DB_CONNECTION: pgsql
              DB_HOST: postgres-cluster-rw.database.svc.cluster.local
              DB_PORT: 5432
              DB_DATABASE: *app
              DB_USERNAME: *app

              # Redis Settings
              REDIS_HOST: redis-cluster.redis.svc.cluster.local
              REDIS_PORT: 6379

            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 500m
                memory: 256Mi
          cronjob:
            image:
              repository: alpine
              tag: 3.22.1
              pullPolicy: IfNotPresent
            command:
              - sh
            args:
              - -c
              - >-
                echo "0 */3 * * * wget -qO- http://firefly-iii:8080/api/v1/cron/$(STATIC_CRON_TOKEN)"
                | crontab -
                && crond -f -L /dev/stdout
            envFrom:
              - secretRef:
                  name: *app
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8080

    route:
      app:
        hostnames: ["firefly.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Firefly III
          gethomepage.dev/group: Finance
          gethomepage.dev/icon: firefly-iii.png
          gethomepage.dev/app: firefly-iii-web
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        enabled: true
        existingClaim: *app
        advancedMounts:
          *app :
            app:
              - path: /var/www/html/storage/upload

